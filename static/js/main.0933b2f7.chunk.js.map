{"version":3,"sources":["components/Header.js","components/Task.js","components/Main.js","components/Footer.js","components/App.js","index.js"],"names":["Header","react_default","a","createElement","Task","props","className","id","concat","index","onChange","handleIncomplete","type","checked","task","completed","htmlFor","contentEditable","editable","autoFocus","focus","onDoubleClick","doubleEdit","onBlur","doubleBlur","onKeyDown","doubleKeyPress","taskName","onClick","destroyClick","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLogic","logic","i","parentState","tasks","length","state","chkboxAllCompleted","setState","event","_event$target","target","arr","toConsumableArray","changeTasks","map","taskID","handleRadio","value","filter","completeAll","substring","splice","clearCompleted","document","getElementById","innerHTML","key","render","placeholder","onKeyPress","components_Task","incomplete","name","complete","undefined","bind","assertThisInitialized","updateState","myValue","React","Component","Footer","App","getIncomplete","count","getComplete","objectSpread","previousState","slice","push","components_Header","components_Main","components_Footer","ReactDOM","components_App"],"mappings":"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","file":"static/js/main.0933b2f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>todos</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Task = props => {\r\n  return (\r\n    <div className=\"taskContainer\">\r\n      <input\r\n        id={`task${props.index}`}\r\n        onChange={props.handleIncomplete}\r\n        className=\"taskCheckbox\"\r\n        type=\"checkbox\"\r\n        checked={props.task.completed}\r\n      />\r\n      <label htmlFor={`task${props.index}`} className=\"hiddenLabel\" />\r\n      <label\r\n        id={`taskLabel${props.index}`}\r\n        contentEditable={props.task.editable}\r\n        autoFocus={props.task.focus}\r\n        className=\"taskLabel\"\r\n        onDoubleClick={props.doubleEdit}\r\n        onBlur={props.doubleBlur}\r\n        onKeyDown={props.doubleKeyPress}\r\n      >\r\n        {props.task.taskName}\r\n      </label>\r\n      <input\r\n        type=\"button\"\r\n        id={`taskButton${props.index}`}\r\n        onClick={props.destroyClick}\r\n        className=\"hiddenButton\"\r\n      />\r\n      <label\r\n        htmlFor={`taskButton${props.index}`}\r\n        className=\"hiddenButtonLabel\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"../styles/Main.css\";\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: undefined,\r\n      filter: \"all\",\r\n      chkboxAllCompleted: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onKeyPress = this.onKeyPress.bind(this);\r\n    this.handleRadio = this.handleRadio.bind(this);\r\n    this.completeAll = this.completeAll.bind(this);\r\n  }\r\n\r\n  onKeyPress(event) {\r\n    if (event.key === \"Enter\") {\r\n      const { value } = event.target;\r\n      this.props.updateState(\r\n        value,\r\n        false,\r\n        `task${this.props.parentState.tasks.length}`\r\n      );\r\n      this.setState(() => {\r\n        return { value: \"\" };\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange(event) {\r\n    const { myValue } = event.target;\r\n    this.setState(() => {\r\n      return {\r\n        value: myValue\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.parentState.tasks.map((task, i) => {\r\n      if (task.editable) {\r\n        document.getElementById(`taskLabel${i}`).focus();\r\n      }\r\n      return task;\r\n    });\r\n    this.handleLogic();\r\n  }\r\n\r\n  handleLogic = () => {\r\n    let logic = true;\r\n    for (let i = 0; i < this.props.parentState.tasks.length; i++) {\r\n      if (!this.props.parentState.tasks[i].completed) {\r\n        logic = false;\r\n      }\r\n    }\r\n    if (this.state.chkboxAllCompleted !== logic) {\r\n      this.setState(() => {\r\n        return {\r\n          chkboxAllCompleted: logic\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleIncomplete = event => {\r\n    const { checked, id } = event.target;\r\n    const arr = [...this.props.parentState.tasks];\r\n    this.props.changeTasks(\r\n      arr.map((task, i) => {\r\n        if (task.taskID === id) {\r\n          task.completed = checked;\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  handleRadio = event => {\r\n    const { value } = event.target;\r\n    this.setState(() => {\r\n      return {\r\n        filter: value\r\n      };\r\n    });\r\n  };\r\n\r\n  completeAll = event => {\r\n    const { checked } = event.target;\r\n    if (checked) {\r\n      this.props.changeTasks(\r\n        this.props.parentState.tasks.map(task => {\r\n          task.completed = true;\r\n          return task;\r\n        })\r\n      );\r\n    } else {\r\n      this.props.changeTasks(\r\n        this.props.parentState.tasks.map(task => {\r\n          task.completed = false;\r\n          return task;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  doubleEdit = event => {\r\n    const { id } = event.target;\r\n    this.props.changeTasks(\r\n      this.props.parentState.tasks.map(task => {\r\n        if (task.taskID.substring(4) === id.substring(9)) {\r\n          task.editable = true;\r\n          //task.focus = true;\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  destroyClick = event => {\r\n    const id = event.target.id;\r\n    const arr = [...this.props.parentState.tasks];\r\n    let i = 0;\r\n    while (i < arr.length) {\r\n      if (arr[i].taskID.substring(4) === id.substring(10)) {\r\n        arr.splice(i, 1);\r\n        break;\r\n      }\r\n      i++;\r\n    }\r\n    this.props.changeTasks(\r\n      arr.map((task, i) => {\r\n        task.taskID = `task${i}`;\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  clearCompleted = () => {\r\n    const arr = [...this.props.parentState.tasks];\r\n    let i = 0;\r\n    while (i < arr.length) {\r\n      if (arr[i].completed) {\r\n        arr.splice(i, 1);\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n    this.props.changeTasks(\r\n      arr.map((task, i) => {\r\n        task.taskID = `task${i}`;\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  doubleBlur = () => {\r\n    this.props.changeTasks(\r\n      this.props.parentState.tasks.map((task, i) => {\r\n        if (task.editable === true) {\r\n          task.editable = false;\r\n          task.taskName = document.getElementById(`taskLabel${i}`).innerHTML;\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  };\r\n\r\n  doubleKeyPress = event => {\r\n    if (event.key === \"Enter\") {\r\n      this.props.changeTasks(\r\n        this.props.parentState.tasks.map((task, i) => {\r\n          if (task.editable === true) {\r\n            task.editable = false;\r\n            task.taskName = document.getElementById(`taskLabel${i}`).innerHTML;\r\n          }\r\n          return task;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    if (this.props.parentState.tasks.length === 0) {\r\n      return (\r\n        <main>\r\n          <div className=\"textInputContainer\">\r\n            <input\r\n              id=\"textInput\"\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              placeholder=\"What needs to be done?\"\r\n              onChange={this.onChange}\r\n              onKeyDown={this.onKeyPress}\r\n            />\r\n          </div>\r\n        </main>\r\n      );\r\n    } else {\r\n      return (\r\n        <main>\r\n          <div className=\"textInputContainer\">\r\n            <input\r\n              id=\"hiddenInput\"\r\n              type=\"checkbox\"\r\n              onClick={this.completeAll}\r\n              checked={this.state.chkboxAllCompleted}\r\n            />\r\n            <label className=\"allCompleted\" htmlFor=\"hiddenInput\">\r\n              >\r\n            </label>\r\n            <input\r\n              id=\"textInput\"\r\n              type=\"text\"\r\n              value={this.state.value}\r\n              placeholder=\"What needs to be done?\"\r\n              onChange={this.onChange}\r\n              onKeyDown={this.onKeyPress}\r\n            />\r\n          </div>\r\n          <div>\r\n            {this.props.parentState.tasks.map((task, i) => {\r\n              if (this.state.filter === \"active\" && !task.completed) {\r\n                return (\r\n                  <Task\r\n                    task={task}\r\n                    index={i}\r\n                    handleIncomplete={this.handleIncomplete}\r\n                    doubleEdit={this.doubleEdit}\r\n                    doubleBlur={this.doubleBlur}\r\n                    doubleKeyPress={this.doubleKeyPress}\r\n                    destroyClick={this.destroyClick}\r\n                  />\r\n                );\r\n              } else if (this.state.filter === \"complete\" && task.completed) {\r\n                return (\r\n                  <Task\r\n                    task={task}\r\n                    index={i}\r\n                    handleIncomplete={this.handleIncomplete}\r\n                    doubleEdit={this.doubleEdit}\r\n                    doubleBlur={this.doubleBlur}\r\n                    doubleKeyPress={this.doubleKeyPress}\r\n                    destroyClick={this.destroyClick}\r\n                  />\r\n                );\r\n              } else if (this.state.filter === \"all\") {\r\n                return (\r\n                  <Task\r\n                    task={task}\r\n                    index={i}\r\n                    handleIncomplete={this.handleIncomplete}\r\n                    doubleEdit={this.doubleEdit}\r\n                    doubleBlur={this.doubleBlur}\r\n                    doubleKeyPress={this.doubleKeyPress}\r\n                    destroyClick={this.destroyClick}\r\n                  />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n            {\r\n              <div className=\"mainBottomContainer\">\r\n                <label className=\"itemCounter\">{`${this.props.incomplete()} item left`}</label>\r\n                <div className=\"filterContainer\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"radioAll\"\r\n                    value=\"all\"\r\n                    name=\"filterManager\"\r\n                    checked={this.state.filter === \"all\"}\r\n                    onChange={this.handleRadio}\r\n                  />\r\n                  <label htmlFor=\"radioAll\">All</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"radioActive\"\r\n                    name=\"filterManager\"\r\n                    value=\"active\"\r\n                    checked={this.state.filter === \"active\"}\r\n                    onChange={this.handleRadio}\r\n                  />\r\n                  <label htmlFor=\"radioActive\">Active</label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    id=\"radioCompleted\"\r\n                    name=\"filterManager\"\r\n                    value=\"complete\"\r\n                    checked={this.state.filter === \"complete\"}\r\n                    onChange={this.handleRadio}\r\n                  />\r\n                  <label htmlFor=\"radioCompleted\">Completed</label>\r\n                </div>\r\n                {this.props.complete() > 0 && (\r\n                  <div className=\"clearContainer\">\r\n                    <input\r\n                      onClick={this.clearCompleted}\r\n                      type=\"button\"\r\n                      id=\"clearButton\"\r\n                    />\r\n                    <label htmlFor=\"clearButton\" className=\"clearLabel\">\r\n                      Clear completed\r\n                    </label>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            }\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <p>Double-click to edit a todo</p>\r\n      <p>Created by David Domotor</p>\r\n      <p>Part of TodoMVC</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: []\n    };\n    this.state = { ...this.state, incomplete: this.state.tasks.length };\n    this.updateState = this.updateState.bind(this);\n    this.changeTasks = this.changeTasks.bind(this);\n  }\n\n  updateState(taskName, completed, taskID) {\n    this.setState(previousState => {\n      const arr = previousState.tasks.slice();\n      arr.push({\n        taskName: taskName,\n        completed: completed,\n        taskID: taskID,\n        editable: false,\n        focus: false\n      });\n      return {\n        tasks: arr,\n        incomplete: previousState.incomplete + 1\n      };\n    });\n  }\n\n  getIncomplete = () => {\n    let count = 0;\n    this.state.tasks.map(task => {\n      if (!task.completed) {\n        count++;\n      }\n      return task;\n    });\n    return count;\n  };\n\n  getComplete = () => {\n    let count = 0;\n    this.state.tasks.map(task => {\n      if (task.completed) {\n        count++;\n      }\n      return task;\n    });\n    return count;\n  };\n\n  changeTasks(arr) {\n    this.setState(() => {\n      return {\n        tasks: arr\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Main\n          updateState={this.updateState}\n          parentState={this.state}\n          changeTasks={this.changeTasks}\n          incomplete={this.getIncomplete}\n          complete={this.getComplete}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}